public class ComputeSizeAverage implements MeasureComputer {

	
	
	
  @Override
  public MeasureComputerDefinition define(MeasureComputerDefinitionContext def) {
		
		  ShiftLeftMetrics   shiftLeftMetrics  = new ShiftLeftMetrics();
	      private final Set<String> outputMetricKeys;
	      for (Metric metric : shiftLeftMetrics.getMetrics()) {
	    	  outputMetricKeys.add(metric.key());
	      }
	
    return def.newDefinitionBuilder()
      .setOutputMetrics(outputMetricKeys.toArray(new String[outputMetricKeys.size()]))
      .build();
  }

  @Override
  public void compute(MeasureComputerContext context) {
    // measure is already defined on files by {@link SetSizeOnFilesSensor}
    // in scanner stack    
      int sum = 0;
      ShiftLeftMetrics   shiftLeftMetrics  = new ShiftLeftMetrics();
      List<Metric>  allShiftLeftMetrics  = shiftLeftMetrics.getMetrics();
      
      for (Metric metric : allShiftLeftMetrics) {
    	  sum = 0;
    	  for (Measure child : context.getChildrenMeasures(metric.key())) {
    	        sum += child.getIntValue();
    	      }
    	  context.addMeasure(metric.key(), sum);
	}
      
  }
}
